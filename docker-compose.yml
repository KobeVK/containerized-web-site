version: '3.7'

networks:
  monitoring:
    driver: bridge

services:
  app:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./app:/home/ubuntu/Greenroad/
    command: sh -c "python3 manage.py runserver 0.0.0.0:8000"
    environment:
      - BUILD_NUMBER
      - ENVIRONMENT
    container_name: Greenroad

  grafana:
    image: grafana/grafana:8.0.0
    restart: always
    container_name: grafana
    ports:
      - "8080:3000"
    depends_on:
      - influxdb
    volumes:
      - grafana-storage:/var/lib/grafana
      - grafana-log:/var/log/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=Welcome01
      - GF_PATHS_LOGS=/var/log/grafana

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - monitoring

volumes:
  grafana-storage:
    external: true
    volumes:
  prometheus_data: {}